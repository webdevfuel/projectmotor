package template

import (
	"github.com/webdevfuel/projectmotor/validator"
	"github.com/webdevfuel/projectmotor/template/shared"
	"github.com/webdevfuel/projectmotor/database"
	"fmt"
	"github.com/webdevfuel/projectmotor/template/modal"
)

templ TaskEditForm(task database.Task, errors validator.ValidatedSlice) {
	<form hx-patch={ templ.EscapeString(fmt.Sprintf("/tasks/%d", task.ID)) } hx-swap="outerHTML">
		@modal.ModalHeader() {
			Edit task
		}
		@modal.ModalBody() {
			<div class="space-y-4">
				<div>
					<label for="title" class="label">Title (required)</label>
					<input
						id="title"
						type="text"
						name="title"
						class="input"
						if errors.GetByKey("Title").Error != "" {
							value={ errors.GetByKey("Title").Value }
						} else {
							value={ task.Title }
						}
					/>
					<span class="error">{ errors.GetByKey("Title").Error }</span>
				</div>
				<div>
					<label for="description" class="label">Description</label>
					<textarea id="description" name="description" class="input">
						if errors.GetByKey("Description").Error != "" {
							{ errors.GetByKey("Description").Value }
						} else {
							{ task.Description.String }
						}
					</textarea>
					<span class="error">{ errors.GetByKey("Description").Error }</span>
				</div>
			</div>
		}
		@modal.ModalFooter() {
			@shared.NewButton(shared.WithButtonType("submit")) {
				Save task
			}
			@shared.NewButton(
				shared.WithButtonColor(shared.Red),
				shared.WithButtonAttribute("hx-delete", fmt.Sprintf("/tasks/%d", task.ID)),
			) {
				Delete task
			}
		}
	</form>
}
