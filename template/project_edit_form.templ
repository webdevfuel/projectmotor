package template

import (
	"fmt"
	"github.com/webdevfuel/projectmotor/database"
	"github.com/webdevfuel/projectmotor/template/csrf"
	"github.com/webdevfuel/projectmotor/template/shared"
	"github.com/webdevfuel/projectmotor/validator"
)

type ProjectEditFormOpts struct {
	SwapOOB bool
}

func NewProjectEditFormOpts() ProjectEditFormOpts {
	return ProjectEditFormOpts{
		SwapOOB: false,
	}
}

templ ProjectEditForm(project database.Project, errors validator.ValidatedSlice, opts ProjectEditFormOpts) {
	<form id="project-form" class="mt-6 space-y-4" hx-patch={ templ.EscapeString(fmt.Sprintf("/projects/%d", project.ID)) } hx-swap="outerHTML">
		@csrf.CSRF()
		<div>
			@shared.NewField(
				shared.WithFieldID("title"),
				shared.WithFieldLabel("Title"),
				shared.WithFieldError(errors.GetByKey("Title").Error),
				shared.WithFieldDefaultValue(errors.GetByKey("Title").Value, project.Title),
			)
		</div>
		<div>
			@shared.NewField(
				shared.WithFieldAs(shared.FieldAsTextarea),
				shared.WithFieldID("description"),
				shared.WithFieldLabel("Description"),
				shared.WithFieldError(errors.GetByKey("Description").Error),
				shared.WithFieldDefaultValue(errors.GetByKey("Description").Value, project.Description.String),
			)
		</div>
		<div class="flex items-center justify-between">
			@shared.NewButton(shared.WithButtonType(shared.ButtonSubmit)) {
				Save project
			}
			@shared.NewButton(
				shared.WithButtonColor(shared.ButtonRed),
				shared.WithButtonAttribute("hx-delete", fmt.Sprintf("/projects/%d", project.ID)),
				shared.WithButtonAttribute("hx-headers", fmt.Sprintf(`{"X-CSRF-Token": "%s"}`, csrf.CSRFHeader(ctx))),
			) {
				Delete project
			}
		</div>
	</form>
	if opts.SwapOOB {
		@ProjectTitle(project, ProjectTitleOpts{
			SwapOOB: true,
		})
	}
}
